리액트.js: 사용자 인터페이스(UI)를 만들기 위한 자바스크립트 라이브러리
        => 화면을 만들기 위한 기능들을 모아놓은 것

라이브러리란 프로그래밍에서 자주 사용하는 기능들을 분류하여 모아놓은 것
사용자 인터페이스(UI)란 사용자와 컴퓨터간의 소통을 도와주기 위해 입력과 출력을 도와주는 것

<리액트의 장점>
1. 빠른 업데이트,렌더링 속도 => virtual DOM사용. 
DOM은 Document Object Model의 약자. 웹사이트의 정보를 모두 담고 있는 큰 그릇.
업데이트란 이 돔의 일부를 변경한다는 뜻이다. 
리액트는 이 가상돔을 이용해서 업데이트 할 부분을 찾아, 그 부분만 바꾸고 빠르게 렌더링한다.
state change => compute diff => re-rendering

2. 컴포넌트 기반 => 재사용성이 좋음
리액트는 모두 컴포넌트로 이루어져 있음. 레고 블록을 조립하듯 컴포넌트를 조립하여 웹사이트를 개발함.
컴포넌트는 재사용성을 좋게 함. 
다른 모델에서 의존성을 낮추고 호환에 문제가 생기지 않도록 만들어서, 다른 부분에 곧바로 사용할 수 
있게 하는 것이 재사용성임. 재사용성을 높이면 유지 보수가 용이함. 서로 의존성이 낮고 독립성이 높기 때문에 
버그를 쉽게 찾고 고칠 수 있음.

3. 활발한 지식공유 및 커뮤니티 : 많은 사용자들에 의한 집단지성

4. 리액트 네이티브 프레임워크 : 모바일 UI 프레임워크와 호환됨.

<리액트의 단점>
1. 배울것이 많음. 계속 변화함.(버전업데이트에 따른 기능변화)

2. 높은 상태관리 복잡도. state를 잘 관리하는 것이 중요함. 웹페이지가 커질수록 이 상태를 관리하는 
것이 쉽지 않음.








